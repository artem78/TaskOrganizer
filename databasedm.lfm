object DatabaseDataModule: TDatabaseDataModule
  OnCreate = DataModuleCreate
  OnDestroy = DataModuleDestroy
  OldCreateOrder = False
  Height = 399
  HorizontalOffset = 250
  VerticalOffset = 137
  Width = 485
  object CustomSQLQuery: TSQLQuery
    FieldDefs = <    
      item
        Name = 'name'
        DataType = ftString
        Precision = -1
        Size = 255
      end    
      item
        Name = 'description'
        DataType = ftMemo
        Precision = -1
      end    
      item
        Name = 'id'
        DataType = ftInteger
        Precision = -1
        Size = 255
      end>
    Database = SQLite3Connection1
    Transaction = SQLTransaction1
    SQL.Strings = (
      'SELECT * FROM `tasks`'
    )
    Params = <>
    DataSource = TasksDataSource
    Left = 48
    Top = 40
  end
  object SQLTransaction1: TSQLTransaction
    Active = True
    Database = SQLite3Connection1
    Left = 136
    Top = 40
  end
  object SQLite3Connection1: TSQLite3Connection
    Connected = True
    LoginPrompt = False
    DatabaseName = 'database.sqlite3'
    KeepConnection = False
    Transaction = SQLTransaction1
    CharSet = 'UTF8'
    OnLog = SQLite3Connection1Log
    AlwaysUseBigint = False
    Left = 240
    Top = 40
  end
  object TasksDataSource: TDataSource
    DataSet = TasksSQLQuery
    Left = 136
    Top = 128
  end
  object TasksSQLQuery: TSQLQuery
    FieldDefs = <>
    Database = SQLite3Connection1
    Transaction = SQLTransaction1
    SQL.Strings = (
      'select id, tasks.name, description, created, modified,'
      '       printf(''%d:%s'', floor(`total_time`) /*days*/, time(IFNULL(`total_time`, 0.5))) AS `total_time`,'
      '       `done`'
      'from tasks'
      'left join duration_per_task'
      'on tasks.id = task_id'
    )
    InsertSQL.Strings = (
      'insert into tasks (name, description, created)'
      'values (:name, :description, :created)'
    )
    UpdateSQL.Strings = (
      'update tasks'
      'set name=:name, description=:description, created=:created, modified=:modified, done=:done'
      'where id=:id'
    )
    DeleteSQL.Strings = (
      'delete from tasks where `id`=:id'
    )
    Params = <>
    Left = 48
    Top = 128
    object TasksSQLQueryId: TAutoIncField
      FieldKind = fkData
      FieldName = 'id'
      Index = 0
      LookupCache = False
      ProviderFlags = [pfInUpdate, pfInWhere]
      ReadOnly = False
      Required = False
    end
    object TasksSQLQueryName: TStringField
      FieldKind = fkData
      FieldName = 'name'
      Index = 1
      LookupCache = False
      ProviderFlags = [pfInUpdate, pfInWhere]
      ReadOnly = False
      Required = False
    end
    object TasksSQLQueryDescription: TStringField
      FieldKind = fkData
      FieldName = 'description'
      Index = 2
      LookupCache = False
      ProviderFlags = [pfInUpdate, pfInWhere]
      ReadOnly = False
      Required = False
    end
    object TasksSQLQueryCreated: TDateTimeField
      FieldKind = fkData
      FieldName = 'created'
      Index = 3
      LookupCache = False
      ProviderFlags = [pfInUpdate, pfInWhere]
      ReadOnly = False
      Required = False
    end
    object TasksSQLQueryModified: TDateTimeField
      FieldKind = fkData
      FieldName = 'modified'
      Index = 4
      LookupCache = False
      ProviderFlags = [pfInUpdate, pfInWhere]
      ReadOnly = False
      Required = False
    end
    object TasksSQLQueryDone: TBooleanField
      FieldKind = fkData
      FieldName = 'done'
      Index = 5
      LookupCache = False
      ProviderFlags = [pfInUpdate, pfInWhere]
      ReadOnly = False
      Required = False
      DisplayValues = 'True;False'
    end
  end
  object PeriodsSQLQuery: TSQLQuery
    FieldDefs = <>
    Database = SQLite3Connection1
    Transaction = SQLTransaction1
    SQL.Strings = (
      'select * from periods'
    )
    Params = <>
    Left = 48
    Top = 208
    object PeriodsSQLQueryId: TAutoIncField
      FieldKind = fkData
      FieldName = 'id'
      Index = 0
      LookupCache = False
      ProviderFlags = [pfInUpdate, pfInWhere]
      ReadOnly = False
      Required = False
    end
    object PeriodsSQLQueryBegin: TDateTimeField
      FieldKind = fkData
      FieldName = 'begin'
      Index = 1
      LookupCache = False
      ProviderFlags = [pfInUpdate, pfInWhere]
      ReadOnly = False
      Required = False
    end
    object PeriodsSQLQueryEnd: TDateTimeField
      FieldKind = fkData
      FieldName = 'end'
      Index = 2
      LookupCache = False
      ProviderFlags = [pfInUpdate, pfInWhere]
      ReadOnly = False
      Required = False
    end
    object PeriodsSQLQueryTaskId: TLongintField
      FieldKind = fkData
      FieldName = 'task_id'
      Index = 3
      LookupCache = False
      ProviderFlags = [pfInUpdate, pfInWhere]
      ReadOnly = False
      Required = False
    end
    object PeriodsSQLQueryIsActive: TBooleanField
      FieldKind = fkData
      FieldName = 'is_active'
      Index = 4
      LookupCache = False
      ProviderFlags = [pfInUpdate, pfInWhere]
      ReadOnly = True
      Required = False
      DisplayValues = 'True;False'
    end
    object PeriodsSQLQueryDuration: TFloatField
      FieldKind = fkData
      FieldName = 'duration'
      Index = 5
      LookupCache = False
      ProviderFlags = [pfInUpdate, pfInWhere]
      ReadOnly = True
      Required = False
    end
  end
  object PeriodsDataSource: TDataSource
    DataSet = PeriodsSQLQuery
    Left = 136
    Top = 208
  end
  object StatsDataSource: TDataSource
    DataSet = StatsSQLQuery
    Left = 136
    Top = 280
  end
  object StatsSQLQuery: TSQLQuery
    FieldDefs = <>
    Database = SQLite3Connection1
    Transaction = SQLTransaction1
    ReadOnly = True
    SQL.Strings = (
      'SELECT `day`,'
      '    printf(''%d:%s'', floor(`duration`) /*days*/, time(`duration` + 0.5)) AS `duration`'
      'FROM `duration_per_day`'
    )
    Params = <>
    Left = 48
    Top = 280
  end
end
